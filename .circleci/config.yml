# CircleCI configuration
version: 2.1

# Slack notification orb
orbs:
  slack: circleci/slack@4.4.2
  aws-ecr: circleci/aws-ecr@7.0.0

# # CircleCi commands
# commands:
#   ecr-destroy:
#     description: destroy 
#     steps:

# Circleci jobs
jobs:
  workflow-start:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Workflow start command
          command: |
            echo "Start worflow..."
            $WORKFLOWSTART="date -Is"

  app-build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: build application
          command: |
            cd app
            npm install 
            npm run build
      - save_cache:
          paths: [app/node_modules]
          key: app-build


  lint-check:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [app-build]
      - run:
          name: lint dockerfile using hadolint
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.5.0/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint
            hadolint ./Dockerfile | tee -a hadolint_lint.txt
            lintErrors=$(stat --printf="%s"  hadolint_lint.txt)
            if [ "$lintErrors" -gt "0" ]; then
                echo "Errors have been found, please see below"
                cat hadolint_lint.txt
                exit 1
            else
                echo "There are no erros found on Dockerfile"
            fi
      - run:
          name: lint app using npm
          command: |
            cd app
            npm install
            npm run lint
      - save_cache:
          paths: [app/node_modules]
          key: app-build


  vulnerability-check:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [app-build]
      - run:
          name: vulnerability check on node packages
          command: |
            cd app
            npm install
            npm audit fix
      - save_cache:
          paths: [app/modules]
          key: app-build


  infrastructure-deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: infrastructure handling for AWS ECR repository
          command: |
            if aws cloudformation describe-stacks --stack-name bcrypt-ecr-repo
            then
              echo "stack already exists"
              exit 0
            else
              echo "stack needs to be created"
              aws cloudformation deploy \
                            --template-file ./infrastructure/aws_cf_ecr.yaml \
                            --stack-name bcrypt-ecr-repo
              exit 0
            fi


  image-check:
    docker: 
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: ecr image check
          command: |
            if aws ecr describe-images --repository-name udacity-capstone-bcrypt
            then 
              echo "docker image available in AWS ECR repository"
              exit 0
            else
              echo "docker image missing in AWS ECR repository"
              exit 1
            fi

  
# Circleci workflow
workflows:
  default:
    jobs:
      - app-build
      - lint-check:
          requires: [app-build]
      - vulnerability-check:
          requires: [app-build]
      - infrastructure-deploy:
          requires: [lint-check, vulnerability-check]
      - aws-ecr/build-and-push-image:
          repo: udacity-capstone-bcrypt
          requires: [infrastructure-deploy]
      - image-check:
          requires: [aws-ecr/build-and-push-image]
